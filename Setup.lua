local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=2 -1 ;local v30;v27=v12(v11(v27,5),v7("\31\235","\220\49\197\202\67\126"),function(v42) if (v9(v42,2)==79) then local v80=0;while true do if (0==v80) then v30=v8(v11(v42,2 -1 ,1));return "";end end else local v81=0;local v82;while true do if (0==v81) then v82=v10(v8(v42,16));if v30 then local v115=v13(v82,v30);v30=nil;return v115;else return v82;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v83=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v83-(v83%1) ;else local v84=2^(v44-1) ;return (((v43%(v84 + v84))>=v84) and 1) or 0 ;end end local function v32() local v46=0;local v47;while true do if (v46==1) then return v47;end if (0==v46) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end end end local function v33() local v48=0;local v49;local v50;while true do if (v48==0) then v49,v50=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;v48=1;end if (v48==1) then return (v50 * 256) + v49 ;end end end local function v34() local v51,v52,v53,v54=v9(v27,v29,v29 + (5 -2) );v29=v29 + 4 ;return (v54 * 16777216) + (v53 * 65536) + (v52 * 256) + v51 ;end local function v35() local v55=v34();local v56=v34();local v57=2 -1 ;local v58=(v31(v56,1,639 -(555 + 64) ) * ((933 -(857 + 74))^32)) + v55 ;local v59=v31(v56,21,599 -(367 + 201) );local v60=((v31(v56,32)==1) and  -1) or 1 ;if (v59==0) then if (v58==0) then return v60 * (927 -(214 + 713)) ;else local v89=0;while true do if (v89==0) then v59=1 + 0 ;v57=0;break;end end end elseif (v59==2047) then return ((v58==(0 + 0)) and (v60 * (1/0))) or (v60 * NaN) ;end return v16(v60,v59-(1900 -(282 + 595)) ) * (v57 + (v58/(2^52))) ;end local function v36(v61) local v62;if  not v61 then v61=v34();if (v61==0) then return "";end end v62=v11(v27,v29,(v29 + v61) -1 );v29=v29 + v61 ;local v63={};for v78=1, #v62 do v63[v78]=v10(v9(v11(v62,v78,v78)));end return v14(v63);end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v64=0;local v65;local v66;local v67;local v68;local v69;local v70;while true do if (v64==0) then v65={};v66={};v67={};v64=1;end if (v64==1) then v68={v65,v66,nil,v67};v69=v34();v70={};v64=2;end if (v64==2) then for v90=1,v69 do local v91=v32();local v92;if (v91==1) then v92=v32()~=0 ;elseif (v91==2) then v92=v35();elseif (v91==3) then v92=v36();end v70[v90]=v92;end v68[3]=v32();for v94=1,v34() do local v95=0;local v96;while true do if (0==v95) then v96=v32();if (v31(v96,1,1)==(0 + 0)) then local v122=0;local v123;local v124;local v125;while true do if (3==v122) then if (v31(v124,3,3)==1) then v125[4]=v70[v125[4]];end v65[v94]=v125;break;end if (v122==1) then v125={v33(),v33(),nil,nil};if (v123==0) then v125[3]=v33();v125[4]=v33();elseif (v123==1) then v125[3]=v34();elseif (v123==2) then v125[3]=v34() -(2^16) ;elseif (v123==3) then local v137=0;while true do if (v137==0) then v125[3]=v34() -(2^16) ;v125[4]=v33();break;end end end v122=2;end if (v122==2) then if (v31(v124,1,1)==1) then v125[2]=v70[v125[1272 -(226 + 1044) ]];end if (v31(v124,2,2)==1) then v125[3]=v70[v125[3]];end v122=3;end if (v122==0) then v123=v31(v96,2,3);v124=v31(v96,4,7 -1 );v122=1;end end end break;end end end v64=3;end if (3==v64) then for v97=1,v34() do v66[v97-1 ]=v39();end return v68;end end end local function v40(v71,v72,v73) local v74=0;local v75;local v76;local v77;while true do if (v74==0) then v75=v71[1];v76=v71[2];v74=1;end if (v74==1) then v77=v71[3];return function(...) local v99=v75;local v100=v76;local v101=v77;local v102=v38;local v103=1;local v104= -(4 -3);local v105={};local v106={...};local v107=v20("#",...) -1 ;local v108={};local v109={};for v113=0,v107 do if (v113>=v101) then v105[v113-v101 ]=v106[v113 + 1 ];else v109[v113]=v106[v113 + 1 ];end end local v110=(v107-v101) + 1 ;local v111;local v112;while true do local v114=0;while true do if (v114==1) then if (v112<=49) then if (v112<=24) then if (v112<=11) then if (v112<=5) then if (v112<=2) then if (v112<=0) then v109[v111[2]]={};elseif (v112>1) then v109[v111[2]]=v73[v111[3]];else local v196=v111[2];v109[v196]=v109[v196]();end elseif (v112<=3) then for v189=v111[2],v111[3] do v109[v189]=nil;end elseif (v112>(121 -(32 + 85))) then v109[v111[2]][v111[3]]=v111[4 + 0 ];else v109[v111[2]]=v111[1 + 2 ]~=0 ;end elseif (v112<=8) then if (v112<=6) then local v139=0;local v140;while true do if (v139==0) then v140=v111[2];do return v21(v109,v140,v104);end break;end end elseif (v112>7) then v109[v111[2]]=v72[v111[3]];else v109[v111[2]][v109[v111[3]]]=v109[v111[961 -(892 + 65) ]];end elseif (v112<=9) then local v141=0;local v142;local v143;local v144;local v145;while true do if (v141==2) then for v373=v142,v104 do local v374=0;while true do if (v374==0) then v145=v145 + 1 ;v109[v373]=v143[v145];break;end end end break;end if (v141==0) then v142=v111[2];v143,v144=v102(v109[v142](v21(v109,v142 + 1 ,v104)));v141=1;end if (v141==1) then v104=(v144 + v142) -1 ;v145=0;v141=2;end end elseif (v112>10) then if (v109[v111[2]]==v109[v111[9 -5 ]]) then v103=v103 + 1 ;else v103=v111[5 -2 ];end else local v205=0;local v206;while true do if (v205==0) then v206=v111[3 -1 ];v109[v206](v109[v206 + (351 -(87 + 263)) ]);break;end end end elseif (v112<=(197 -(67 + 113))) then if (v112<=14) then if (v112<=12) then local v146=v111[2];local v147=v109[v146 + 2 ];local v148=v109[v146] + v147 ;v109[v146]=v148;if (v147>0) then if (v148<=v109[v146 + 1 ]) then local v376=0;while true do if (v376==0) then v103=v111[3];v109[v146 + 3 ]=v148;break;end end end elseif (v148>=v109[v146 + 1 ]) then local v377=0;while true do if (v377==0) then v103=v111[3];v109[v146 + 3 ]=v148;break;end end end elseif (v112==13) then local v207=v111[2];local v208,v209=v102(v109[v207](v109[v207 + 1 + 0 ]));v104=(v209 + v207) -1 ;local v210=0;for v337=v207,v104 do local v338=0;while true do if (v338==0) then v210=v210 + 1 ;v109[v337]=v208[v210];break;end end end else local v211=0;local v212;while true do if (v211==0) then v212=v111[2];do return v21(v109,v212,v212 + v111[3] );end break;end end end elseif (v112<=(36 -21)) then do return v109[v111[2]]();end elseif (v112>16) then v109[v111[2]]=v111[3]~=0 ;else local v214=0;local v215;while true do if (v214==0) then v215=v111[2];do return v109[v215](v21(v109,v215 + 1 + 0 ,v111[11 -8 ]));end break;end end end elseif (v112<=20) then if (v112<=18) then v109[v111[2]]=v109[v111[3]] + v111[4] ;elseif (v112==19) then local v216=0;local v217;local v218;while true do if (v216==1) then for v447=v217 + 1 ,v104 do v15(v218,v109[v447]);end break;end if (0==v216) then v217=v111[2];v218=v109[v217];v216=1;end end else v109[v111[2]]=v109[v111[3]]%v109[v111[4]] ;end elseif (v112<=22) then if (v112>21) then local v220=0;local v221;local v222;local v223;while true do if (1==v220) then v223=0;for v448=v221,v111[4] do v223=v223 + 1 ;v109[v448]=v222[v223];end break;end if (v220==0) then v221=v111[954 -(802 + 150) ];v222={v109[v221](v109[v221 + 1 ])};v220=1;end end else v109[v111[2]]=v109[v111[3]]%v111[4] ;end elseif (v112>23) then local v225=0;local v226;while true do if (v225==0) then v226=v111[2];do return v109[v226](v21(v109,v226 + 1 ,v111[3]));end break;end end else do return v109[v111[2]];end end elseif (v112<=36) then if (v112<=30) then if (v112<=27) then if (v112<=25) then v109[v111[2]]();elseif (v112>26) then if (v109[v111[2]]~=v111[4]) then v103=v103 + 1 ;else v103=v111[3];end else v109[v111[2]]=v109[v111[3]]%v109[v111[4]] ;end elseif (v112<=28) then if v109[v111[2]] then v103=v103 + 1 ;else v103=v111[3];end elseif (v112==29) then local v229=v111[2];v109[v229]=v109[v229](v109[v229 + (1 -0) ]);else v109[v111[2]]=v109[v111[3]] + v111[4] ;end elseif (v112<=33) then if (v112<=31) then local v151=0;local v152;while true do if (v151==0) then v152=v111[2];v109[v152](v21(v109,v152 + 1 ,v111[3]));break;end end elseif (v112==32) then v109[v111[2]][v109[v111[3]]]=v109[v111[4]];else v109[v111[2 + 0 ]][v109[v111[3]]]=v111[4];end elseif (v112<=34) then if (v109[v111[2]]==v111[4]) then v103=v103 + 1 ;else v103=v111[3];end elseif (v112>35) then local v237=v111[2];local v238=v111[4];local v239=v237 + 2 ;local v240={v109[v237](v109[v237 + 1 ],v109[v239])};for v340=1,v238 do v109[v239 + v340 ]=v240[v340];end local v241=v240[1];if v241 then v109[v239]=v241;v103=v111[3];else v103=v103 + (998 -(915 + 82)) ;end else v109[v111[2]][v111[3]]=v111[4];end elseif (v112<=42) then if (v112<=39) then if (v112<=37) then v109[v111[2]]=v111[3] + v109[v111[4]] ;elseif (v112==38) then v109[v111[2]]=v109[v111[3]];else local v246=0;local v247;local v248;while true do if (v246==0) then v247=v111[2];v248={};v246=1;end if (1==v246) then for v451=1, #v108 do local v452=v108[v451];for v480=0, #v452 do local v481=0;local v482;local v483;local v484;while true do if (v481==0) then v482=v452[v480];v483=v482[1];v481=1;end if (v481==1) then v484=v482[2];if ((v483==v109) and (v484>=v247)) then v248[v484]=v483[v484];v482[1]=v248;end break;end end end end break;end end end elseif (v112<=40) then do return;end elseif (v112>41) then local v249=v111[2];v109[v249](v109[v249 + 1 ]);else v103=v111[3];end elseif (v112<=(127 -82)) then if (v112<=43) then local v154=v111[2];v109[v154]=v109[v154](v21(v109,v154 + 1 + 0 ,v104));elseif (v112==(57 -13)) then local v251=0;local v252;while true do if (v251==0) then v252=v111[2];v109[v252]=v109[v252]();break;end end elseif (v109[v111[2]]==v109[v111[4]]) then v103=v103 + 1 ;else v103=v111[3];end elseif (v112<=47) then if (v112>46) then if (v111[2]==v109[v111[4]]) then v103=v103 + 1 ;else v103=v111[3];end else v109[v111[2]]=v111[3];end elseif (v112==48) then local v255=v100[v111[3]];local v256;local v257={};v256=v18({},{[v7("\248\251\87\57\95\1\223","\100\167\164\62\87\59")]=function(v343,v344) local v345=0;local v346;while true do if (0==v345) then v346=v257[v344];return v346[1188 -(1069 + 118) ][v346[2]];end end end,[v7("\191\105\78\204\240\11\39\132\83\88","\73\224\54\32\169\135\98")]=function(v347,v348,v349) local v350=v257[v348];v350[1][v350[4 -2 ]]=v349;end});for v352=1,v111[4] do local v353=0;local v354;while true do if (v353==0) then v103=v103 + 1 ;v354=v99[v103];v353=1;end if (v353==1) then if (v354[1]==53) then v257[v352-1 ]={v109,v354[3]};else v257[v352-1 ]={v72,v354[3]};end v108[ #v108 + 1 ]=v257;break;end end end v109[v111[2]]=v40(v255,v256,v73);elseif (v111[2]==v109[v111[4]]) then v103=v103 + 1 ;else v103=v111[3];end elseif (v112<=74) then if (v112<=61) then if (v112<=55) then if (v112<=52) then if (v112<=50) then local v156=0;local v157;local v158;while true do if (v156==1) then for v384=v157 + 1 ,v104 do v15(v158,v109[v384]);end break;end if (v156==0) then v157=v111[2];v158=v109[v157];v156=1;end end elseif (v112==51) then v109[v111[2]]=v109[v111[3]][v111[4]];else local v261=v111[3];local v262=v109[v261];for v357=v261 + 1 ,v111[4] do v262=v262   .. v109[v357] ;end v109[v111[2]]=v262;end elseif (v112<=53) then v109[v111[2]]=v109[v111[4 -1 ]];elseif (v112>54) then v109[v111[2 + 0 ]][v109[v111[3]]]=v111[4];else local v266=0;local v267;local v268;while true do if (1==v266) then for v456=v267 + 1 ,v111[4] do v268=v268   .. v109[v456] ;end v109[v111[2]]=v268;break;end if (v266==0) then v267=v111[3];v268=v109[v267];v266=1;end end end elseif (v112<=(849 -(368 + 423))) then if (v112<=56) then local v161=v111[2];local v162=v109[v161];local v163=v109[v161 + 2 ];if (v163>0) then if (v162>v109[v161 + 1 ]) then v103=v111[3];else v109[v161 + 3 ]=v162;end elseif (v162<v109[v161 + (3 -2) ]) then v103=v111[3];else v109[v161 + 3 ]=v162;end elseif (v112==57) then local v269=0;local v270;local v271;local v272;while true do if (1==v269) then v272=v111[21 -(10 + 8) ];for v457=1,v272 do v271[v457]=v109[v270 + v457 ];end break;end if (v269==0) then v270=v111[2];v271=v109[v270];v269=1;end end else local v273=0;local v274;local v275;while true do if (v273==0) then v274=v111[2];v275={};v273=1;end if (v273==1) then for v460=1, #v108 do local v461=v108[v460];for v485=0, #v461 do local v486=0;local v487;local v488;local v489;while true do if (0==v486) then v487=v461[v485];v488=v487[1];v486=1;end if (v486==1) then v489=v487[2];if ((v488==v109) and (v489>=v274)) then v275[v489]=v488[v489];v487[1]=v275;end break;end end end end break;end end end elseif (v112<=59) then local v164=0;local v165;local v166;while true do if (v164==1) then for v389=v165 + 1 ,v111[3] do v15(v166,v109[v389]);end break;end if (v164==0) then v165=v111[2];v166=v109[v165];v164=1;end end elseif (v112==(230 -170)) then local v276=v111[2];local v277,v278=v102(v109[v276](v21(v109,v276 + 1 ,v104)));v104=(v278 + v276) -(443 -(416 + 26)) ;local v279=0;for v360=v276,v104 do local v361=0;while true do if (v361==0) then v279=v279 + 1 ;v109[v360]=v277[v279];break;end end end else local v280=v111[2];local v281,v282=v102(v109[v280](v21(v109,v280 + 1 ,v111[3])));v104=(v282 + v280) -1 ;local v283=0;for v362=v280,v104 do v283=v283 + 1 ;v109[v362]=v281[v283];end end elseif (v112<=67) then if (v112<=64) then if (v112<=62) then v103=v111[3];elseif (v112==63) then v109[v111[2]]();else local v284=0;local v285;while true do if (v284==0) then v285=v111[6 -4 ];v109[v285](v21(v109,v285 + 1 ,v104));break;end end end elseif (v112<=65) then local v168=0;local v169;local v170;local v171;while true do if (0==v168) then v169=v100[v111[3]];v170=nil;v168=1;end if (v168==1) then v171={};v170=v18({},{[v7("\247\244\126\42\80\248\213","\173\168\171\23\68\52\157")]=function(v390,v391) local v392=0;local v393;while true do if (v392==0) then v393=v171[v391];return v393[1][v393[2]];end end end,[v7("\184\203\127\240\200\142\250\117\240\199","\191\231\148\17\149")]=function(v394,v395,v396) local v397=0;local v398;while true do if (v397==0) then v398=v171[v395];v398[1][v398[2]]=v396;break;end end end});v168=2;end if (v168==2) then for v399=1,v111[4] do v103=v103 + 1 ;local v400=v99[v103];if (v400[1]==(23 + 30)) then v171[v399-1 ]={v109,v400[3]};else v171[v399-1 ]={v72,v400[3]};end v108[ #v108 + 1 ]=v171;end v109[v111[2]]=v40(v169,v170,v73);break;end end elseif (v112>66) then local v286=0;local v287;local v288;local v289;while true do if (v286==1) then v289=v111[3];for v466=1,v289 do v288[v466]=v109[v287 + v466 ];end break;end if (v286==0) then v287=v111[2];v288=v109[v287];v286=1;end end else do return;end end elseif (v112<=70) then if (v112<=68) then local v172=v111[2];local v173=v109[v111[3]];v109[v172 + 1 ]=v173;v109[v172]=v173[v111[4]];elseif (v112==69) then if  not v109[v111[2]] then v103=v103 + 1 ;else v103=v111[3];end else local v290=v111[2];v109[v290](v21(v109,v290 + 1 ,v111[3]));end elseif (v112<=(126 -54)) then if (v112>(509 -(145 + 293))) then local v291=0;local v292;local v293;local v294;local v295;while true do if (v291==2) then for v469=v292,v104 do v295=v295 + 1 ;v109[v469]=v293[v295];end break;end if (v291==1) then v104=(v294 + v292) -1 ;v295=0;v291=2;end if (0==v291) then v292=v111[2];v293,v294=v102(v109[v292](v21(v109,v292 + 1 ,v111[3])));v291=1;end end else local v296=0;local v297;local v298;while true do if (v296==0) then v297=v111[2];v298=v109[v111[3]];v296=1;end if (v296==1) then v109[v297 + 1 ]=v298;v109[v297]=v298[v111[4]];break;end end end elseif (v112>73) then local v299=0;local v300;while true do if (v299==0) then v300=v111[2];do return v21(v109,v300,v104);end break;end end else for v367=v111[2],v111[3] do v109[v367]=nil;end end elseif (v112<=87) then if (v112<=80) then if (v112<=77) then if (v112<=75) then local v177=v111[2];local v178=v111[4];local v179=v177 + 2 ;local v180={v109[v177](v109[v177 + 1 ],v109[v179])};for v191=1,v178 do v109[v179 + v191 ]=v180[v191];end local v181=v180[1];if v181 then local v301=0;while true do if (0==v301) then v109[v179]=v181;v103=v111[3];break;end end else v103=v103 + 1 ;end elseif (v112>76) then local v302=0;local v303;while true do if (0==v302) then v303=v111[432 -(44 + 386) ];v109[v303]=v109[v303](v21(v109,v303 + 1 ,v104));break;end end else local v304=v111[1488 -(998 + 488) ];v109[v304]=v109[v304](v21(v109,v304 + 1 ,v111[3]));end elseif (v112<=(25 + 53)) then v109[v111[2]]=v109[v111[3 + 0 ]][v111[4]];elseif (v112==79) then if v109[v111[774 -(201 + 571) ]] then v103=v103 + 1 ;else v103=v111[3];end else v109[v111[2]]=v72[v111[1141 -(116 + 1022) ]];end elseif (v112<=83) then if (v112<=(337 -256)) then local v184=0;local v185;while true do if (v184==0) then v185=v111[2];v109[v185]=v109[v185](v21(v109,v185 + 1 ,v111[3]));break;end end elseif (v112==(49 + 33)) then v73[v111[3]]=v109[v111[2]];else local v310=0;local v311;local v312;local v313;while true do if (v310==2) then if (v312>(0 -0)) then if (v313<=v109[v311 + 1 ]) then v103=v111[3];v109[v311 + 3 ]=v313;end elseif (v313>=v109[v311 + 1 ]) then v103=v111[3];v109[v311 + 3 ]=v313;end break;end if (0==v310) then v311=v111[2];v312=v109[v311 + 2 ];v310=1;end if (v310==1) then v313=v109[v311] + v312 ;v109[v311]=v313;v310=2;end end end elseif (v112<=(301 -216)) then if (v112>84) then if (v109[v111[2]]~=v111[4]) then v103=v103 + 1 ;else v103=v111[862 -(814 + 45) ];end elseif (v109[v111[2]]==v111[4]) then v103=v103 + 1 ;else v103=v111[3];end elseif (v112>86) then v109[v111[2]]=v111[3];else local v316=v111[2];v109[v316]=v109[v316](v109[v316 + 1 ]);end elseif (v112<=93) then if (v112<=90) then if (v112<=88) then v73[v111[3]]=v109[v111[2]];elseif (v112>89) then do return v109[v111[2]]();end else v109[v111[2]]=v73[v111[3]];end elseif (v112<=91) then v109[v111[2]]= #v109[v111[3]];elseif (v112>92) then local v320=v111[2];v109[v320](v21(v109,v320 + 1 ,v104));else v109[v111[4 -2 ]]={};end elseif (v112<=96) then if (v112<=(6 + 88)) then do return v109[v111[2]];end elseif (v112==95) then local v322=v111[2];local v323,v324=v102(v109[v322](v109[v322 + 1 ]));v104=(v324 + v322) -(1 + 0) ;local v325=0;for v371=v322,v104 do local v372=0;while true do if (v372==0) then v325=v325 + 1 ;v109[v371]=v323[v325];break;end end end else local v326=0;local v327;local v328;local v329;while true do if (v326==0) then v327=v111[2];v328=v109[v327];v326=1;end if (v326==1) then v329=v109[v327 + (887 -(261 + 624)) ];if (v329>0) then if (v328>v109[v327 + 1 ]) then v103=v111[3];else v109[v327 + 3 ]=v328;end elseif (v328<v109[v327 + 1 ]) then v103=v111[3];else v109[v327 + (4 -1) ]=v328;end break;end end end elseif (v112<=98) then if (v112>97) then v109[v111[2]]=v111[3] + v109[v111[1084 -(1020 + 60) ]] ;else v109[v111[1425 -(630 + 793) ]]= #v109[v111[3]];end elseif (v112>99) then v109[v111[2]]=v109[v111[3]]%v111[4] ;elseif  not v109[v111[2]] then v103=v103 + 1 ;else v103=v111[3];end v103=v103 + 1 ;break;end if (v114==0) then v111=v99[v103];v112=v111[1];v114=1;end end end end;end end end return v40(v39(),{},v28)(...);end return vleft)
