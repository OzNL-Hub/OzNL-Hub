local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v42=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v42,v42 + 1 )),v1(v2(v25,1 + (v42% #v25) ,1 + (v42% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=0;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;local v40;local v41;while true do if (0==v29) then v30=1;v31=nil;v27=v12(v11(v27,5),v7("\143\12","\101\161\34\82\182"),function(v43) if (v9(v43,5 -3 )==79) then local v94=0;while true do if (v94==0) then v31=v8(v11(v43,1,1));return "";end end else local v95=0;local v96;while true do if (v95==0) then v96=v10(v8(v43,45 -29 ));if v31 then local v120=v13(v96,v31);v31=nil;return v120;else return v96;end break;end end end end);v32=nil;v29=1;end if (v29==3) then function v36() local v44=0;local v45;local v46;local v47;local v48;local v49;local v50;while true do if (v44==0) then v45=v35();v46=v35();v44=1;end if (v44==2) then v49=v32(v46,21,31);v50=((v32(v46,32)==1) and  -1) or 1 ;v44=3;end if (v44==1) then v47=620 -(555 + 64) ;v48=(v32(v46,1,20) * ((933 -(857 + 74))^32)) + v45 ;v44=2;end if (3==v44) then if (v49==0) then if (v48==0) then return v50 * 0 ;else local v121=0;while true do if (0==v121) then v49=1;v47=0;break;end end end elseif (v49==2047) then return ((v48==0) and (v50 * (1/0))) or (v50 * NaN) ;end return v16(v50,v49-1023 ) * (v47 + (v48/(2^52))) ;end end end v37=nil;function v37(v51) local v52=0;local v53;local v54;while true do if (3==v52) then return v14(v54);end if (v52==1) then v53=v11(v27,v30,(v30 + v51) -1 );v30=v30 + v51 ;v52=2;end if (v52==0) then v53=nil;if  not v51 then local v119=0;while true do if (v119==0) then v51=v35();if (v51==0) then return "";end break;end end end v52=1;end if (v52==2) then v54={};for v104=1, #v53 do v54[v104]=v10(v9(v11(v53,v104,v104)));end v52=3;end end end v38=v35;v29=4;end if (v29==5) then v41=nil;function v41(v55,v56,v57) local v58=v55[1];local v59=v55[2];local v60=v55[3];return function(...) local v80=v58;local v81=v59;local v82=v60;local v83=v39;local v84=1;local v85= -1;local v86={};local v87={...};local v88=v20("#",...) -(1066 -(68 + 997)) ;local v89={};local v90={};for v97=0,v88 do if (v97>=v82) then v86[v97-v82 ]=v87[v97 + 1 ];else v90[v97]=v87[v97 + 1 ];end end local v91=(v88-v82) + 1 ;local v92;local v93;while true do v92=v80[v84];v93=v92[1];if (v93<=50) then if (v93<=24) then if (v93<=11) then if (v93<=(1275 -(226 + 1044))) then if (v93<=2) then if (v93<=0) then v90[v92[2]]=v90[v92[3]] + v92[4] ;elseif (v93==1) then do return;end else v90[v92[2]]=v90[v92[3]]%v92[4] ;end elseif (v93<=3) then local v135=v92[2];local v136=v92[4];local v137=v135 + 2 ;local v138={v90[v135](v90[v135 + 1 ],v90[v137])};for v184=1,v136 do v90[v137 + v184 ]=v138[v184];end local v139=v138[1];if v139 then local v194=0;while true do if (v194==0) then v90[v137]=v139;v84=v92[12 -9 ];break;end end else v84=v84 + 1 ;end elseif (v93==(121 -(32 + 85))) then do return v90[v92[2 + 0 ]]();end else v57[v92[3]]=v90[v92[2]];end elseif (v93<=8) then if (v93<=6) then v90[v92[2]]();elseif (v93==7) then local v197=v92[2];v90[v197]=v90[v197](v90[v197 + 1 ]);else v90[v92[2]]=v56[v92[3]];end elseif (v93<=9) then v90[v92[2]][v90[v92[1 + 2 ]]]=v90[v92[4]];elseif (v93>10) then local v201=0;local v202;while true do if (v201==0) then v202=v92[959 -(892 + 65) ];v90[v202]=v90[v202](v21(v90,v202 + 1 ,v85));break;end end else local v203=v92[2];v90[v203](v21(v90,v203 + 1 ,v85));end elseif (v93<=17) then if (v93<=14) then if (v93<=12) then local v142=0;local v143;local v144;local v145;while true do if (v142==1) then v145=v90[v143] + v144 ;v90[v143]=v145;v142=2;end if (v142==2) then if (v144>0) then if (v145<=v90[v143 + 1 ]) then local v477=0;while true do if (v477==0) then v84=v92[3];v90[v143 + (7 -4) ]=v145;break;end end end elseif (v145>=v90[v143 + 1 ]) then local v478=0;while true do if (0==v478) then v84=v92[3];v90[v143 + 3 ]=v145;break;end end end break;end if (v142==0) then v143=v92[2];v144=v90[v143 + 2 ];v142=1;end end elseif (v93>(23 -10)) then local v204=0;local v205;local v206;while true do if (v204==1) then v90[v205 + 1 ]=v206;v90[v205]=v206[v92[4]];break;end if (v204==0) then v205=v92[2];v206=v90[v92[3]];v204=1;end end else v90[v92[2]]=v90[v92[3]];end elseif (v93<=(27 -12)) then if (v92[2]==v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93==16) then v57[v92[3]]=v90[v92[2]];else v90[v92[2]]=v90[v92[3]][v92[4]];end elseif (v93<=(370 -(87 + 263))) then if (v93<=18) then v90[v92[2]]= #v90[v92[183 -(67 + 113) ]];elseif (v93>19) then local v214=v92[2];v90[v214]=v90[v214](v90[v214 + 1 ]);else local v216=v92[2];local v217,v218=v83(v90[v216](v90[v216 + 1 ]));v85=(v218 + v216) -1 ;local v219=0;for v342=v216,v85 do v219=v219 + 1 ;v90[v342]=v217[v219];end end elseif (v93<=22) then if (v93>21) then local v220=v92[2];v90[v220](v90[v220 + 1 ]);else v90[v92[2 + 0 ]]=v92[3]~=0 ;end elseif (v93>23) then local v222=0;local v223;local v224;while true do if (v222==0) then v223=v92[2];v224={};v222=1;end if (v222==1) then for v439=1, #v89 do local v440=0;local v441;while true do if (0==v440) then v441=v89[v439];for v514=0, #v441 do local v515=0;local v516;local v517;local v518;while true do if (0==v515) then v516=v441[v514];v517=v516[1];v515=1;end if (1==v515) then v518=v516[2];if ((v517==v90) and (v518>=v223)) then local v530=0;while true do if (v530==0) then v224[v518]=v517[v518];v516[1]=v224;break;end end end break;end end end break;end end end break;end end else local v225=0;local v226;local v227;local v228;local v229;while true do if (v225==0) then v226=v92[2];v227,v228=v83(v90[v226](v21(v90,v226 + 1 ,v85)));v225=1;end if (v225==2) then for v442=v226,v85 do local v443=0;while true do if (v443==0) then v229=v229 + 1 ;v90[v442]=v227[v229];break;end end end break;end if (v225==1) then v85=(v228 + v226) -1 ;v229=0;v225=2;end end end elseif (v93<=37) then if (v93<=(73 -43)) then if (v93<=27) then if (v93<=25) then local v147=0;local v148;local v149;local v150;while true do if (v147==0) then v148=v92[2];v149=v90[v148];v147=1;end if (v147==1) then v150=v90[v148 + 2 ];if (v150>0) then if (v149>v90[v148 + 1 ]) then v84=v92[3 + 0 ];else v90[v148 + 3 ]=v149;end elseif (v149<v90[v148 + 1 ]) then v84=v92[11 -8 ];else v90[v148 + (955 -(802 + 150)) ]=v149;end break;end end elseif (v93>26) then v84=v92[3];else local v231=0;local v232;local v233;local v234;while true do if (v231==2) then if (v233>0) then if (v234<=v90[v232 + 1 ]) then v84=v92[3];v90[v232 + 3 ]=v234;end elseif (v234>=v90[v232 + 1 ]) then local v506=0;while true do if (v506==0) then v84=v92[3];v90[v232 + 3 ]=v234;break;end end end break;end if (0==v231) then v232=v92[2];v233=v90[v232 + 2 ];v231=1;end if (v231==1) then v234=v90[v232] + v233 ;v90[v232]=v234;v231=2;end end end elseif (v93<=28) then if (v90[v92[2]]~=v92[10 -6 ]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93==29) then if (v90[v92[2]]==v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end else local v236=0;local v237;local v238;local v239;local v240;while true do if (v236==1) then v85=(v239 + v237) -1 ;v240=0;v236=2;end if (v236==2) then for v444=v237,v85 do v240=v240 + 1 ;v90[v444]=v238[v240];end break;end if (v236==0) then v237=v92[2];v238,v239=v83(v90[v237](v21(v90,v237 + 1 ,v92[3])));v236=1;end end end elseif (v93<=33) then if (v93<=31) then do return;end elseif (v93>32) then if (v90[v92[2]]==v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end else local v241=v92[2];local v242=v90[v92[3]];v90[v241 + 1 ]=v242;v90[v241]=v242[v92[4]];end elseif (v93<=35) then if (v93==34) then v90[v92[2]]=v92[3]~=(0 -0) ;else v90[v92[2]]=v57[v92[3]];end elseif (v93>36) then v90[v92[2]]=v92[3];else local v251=v92[2];do return v21(v90,v251,v251 + v92[3] );end end elseif (v93<=43) then if (v93<=40) then if (v93<=38) then local v151=0;local v152;local v153;local v154;while true do if (v151==1) then v154={};v153=v18({},{[v7("\215\50\80\240\223\231\154","\78\136\109\57\158\187\130\226")]=function(v375,v376) local v377=0;local v378;while true do if (v377==0) then v378=v154[v376];return v378[1][v378[2]];end end end,[v7("\1\0\247\244\41\54\247\245\59\39","\145\94\95\153")]=function(v379,v380,v381) local v382=0;local v383;while true do if (v382==0) then v383=v154[v380];v383[1][v383[2]]=v381;break;end end end});v151=2;end if (v151==0) then v152=v81[v92[3]];v153=nil;v151=1;end if (v151==2) then for v384=1 + 0 ,v92[4] do local v385=0;local v386;while true do if (0==v385) then v84=v84 + 1 ;v386=v80[v84];v385=1;end if (v385==1) then if (v386[1]==101) then v154[v384-1 ]={v90,v386[3]};else v154[v384-1 ]={v56,v386[3]};end v89[ #v89 + 1 ]=v154;break;end end end v90[v92[2]]=v41(v152,v153,v57);break;end end elseif (v93>39) then if (v90[v92[2]]==v92[4]) then v84=v84 + (2 -1) ;else v84=v92[3];end else local v252=0;local v253;while true do if (v252==0) then v253=v92[2];v90[v253]=v90[v253]();break;end end end elseif (v93<=41) then local v155=0;local v156;local v157;local v158;while true do if (0==v155) then v156=v92[2];v157=v90[v156];v155=1;end if (v155==1) then v158=v90[v156 + 2 ];if (v158>0) then if (v157>v90[v156 + 1 ]) then v84=v92[3];else v90[v156 + 2 + 1 ]=v157;end elseif (v157<v90[v156 + 1 ]) then v84=v92[3 -0 ];else v90[v156 + 3 ]=v157;end break;end end elseif (v93>42) then local v254=v92[2];do return v90[v254](v21(v90,v254 + 1 ,v92[3]));end else v90[v92[2]]=v90[v92[3]]%v90[v92[4]] ;end elseif (v93<=46) then if (v93<=44) then do return v90[v92[1189 -(1069 + 118) ]];end elseif (v93>45) then local v256=0;local v257;local v258;while true do if (v256==0) then v257=v92[2];v258={};v256=1;end if (v256==1) then for v447=1, #v89 do local v448=v89[v447];for v492=0, #v448 do local v493=0;local v494;local v495;local v496;while true do if (v493==1) then v496=v494[2];if ((v495==v90) and (v496>=v257)) then v258[v496]=v495[v496];v494[2 -1 ]=v258;end break;end if (v493==0) then v494=v448[v492];v495=v494[1];v493=1;end end end end break;end end elseif  not v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=48) then if (v93>47) then local v259=0;local v260;local v261;while true do if (1==v259) then for v449=v260 + (1 -0) ,v92[3] do v15(v261,v90[v449]);end break;end if (v259==0) then v260=v92[2];v261=v90[v260];v259=1;end end else local v262=0;local v263;local v264;local v265;while true do if (0==v262) then v263=v92[2];v264=v90[v263];v262=1;end if (v262==1) then v265=v92[3];for v450=1,v265 do v264[v450]=v90[v263 + v450 ];end break;end end end elseif (v93==49) then local v266=0;local v267;while true do if (v266==0) then v267=v92[1 + 1 ];do return v21(v90,v267,v85);end break;end end else v90[v92[3 -1 ]]={};end elseif (v93<=75) then if (v93<=62) then if (v93<=56) then if (v93<=53) then if (v93<=51) then local v159=v92[2];local v160=v90[v159];local v161=v92[3];for v187=1,v161 do v160[v187]=v90[v159 + v187 ];end elseif (v93==52) then v90[v92[2]]=v90[v92[3]][v92[4 + 0 ]];else v90[v92[793 -(368 + 423) ]]=v90[v92[3]]%v92[4] ;end elseif (v93<=54) then do return v90[v92[2]]();end elseif (v93==(172 -117)) then for v353=v92[2],v92[3] do v90[v353]=nil;end else v90[v92[2]][v92[3]]=v92[4];end elseif (v93<=59) then if (v93<=57) then local v162=0;local v163;while true do if (v162==0) then v163=v92[2];v90[v163]=v90[v163](v21(v90,v163 + 1 ,v92[3]));break;end end elseif (v93==58) then local v274=v92[2];local v275={v90[v274](v90[v274 + 1 ])};local v276=0;for v357=v274,v92[4] do local v358=0;while true do if (v358==0) then v276=v276 + (3 -2) ;v90[v357]=v275[v276];break;end end end else v90[v92[2]]=v92[3] + v90[v92[4]] ;end elseif (v93<=60) then v90[v92[2]]=v57[v92[3]];elseif (v93>61) then v90[v92[2]]=v92[3] + v90[v92[4]] ;else v90[v92[2]]={};end elseif (v93<=68) then if (v93<=65) then if (v93<=63) then v90[v92[2]]=v92[3];elseif (v93>(506 -(416 + 26))) then v90[v92[2]]=v56[v92[3]];else local v282=v92[2];local v283={v90[v282](v90[v282 + 1 ])};local v284=0;for v359=v282,v92[4] do local v360=0;while true do if (v360==0) then v284=v284 + 1 ;v90[v359]=v283[v284];break;end end end end elseif (v93<=66) then local v168=0;local v169;local v170;while true do if (v168==1) then for v389=v169 + 1 ,v85 do v15(v170,v90[v389]);end break;end if (0==v168) then v169=v92[2];v170=v90[v169];v168=1;end end elseif (v93>67) then if v90[v92[2]] then v84=v84 + 1 ;else v84=v92[9 -6 ];end else local v285=v92[2];local v286=v92[4];local v287=v285 + 2 ;local v288={v90[v285](v90[v285 + 1 ],v90[v287])};for v363=1,v286 do v90[v287 + v363 ]=v288[v363];end local v289=v288[1];if v289 then local v391=0;while true do if (v391==0) then v90[v287]=v289;v84=v92[3];break;end end else v84=v84 + 1 ;end end elseif (v93<=(31 + 40)) then if (v93<=69) then if v90[v92[2]] then v84=v84 + 1 ;else v84=v92[4 -1 ];end elseif (v93==70) then local v291=v92[2];v90[v291]=v90[v291]();else v90[v92[2]]();end elseif (v93<=73) then if (v93>72) then v90[v92[2]]=v90[v92[3]]%v90[v92[4]] ;elseif (v90[v92[2]]~=v92[442 -(145 + 293) ]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93==74) then v84=v92[433 -(44 + 386) ];else v90[v92[2]][v90[v92[3]]]=v92[4];end elseif (v93<=88) then if (v93<=81) then if (v93<=78) then if (v93<=(1562 -(998 + 488))) then local v171=0;local v172;while true do if (v171==0) then v172=v92[2];do return v90[v172](v21(v90,v172 + 1 + 0 ,v92[3]));end break;end end elseif (v93==(64 + 13)) then local v297=0;local v298;while true do if (v297==0) then v298=v92[2];v90[v298](v90[v298 + 1 ]);break;end end else v90[v92[2]][v92[3]]=v92[4];end elseif (v93<=79) then if  not v90[v92[774 -(201 + 571) ]] then v84=v84 + 1 ;else v84=v92[3];end elseif (v93>80) then local v302=0;local v303;local v304;while true do if (v302==1) then for v457=v303 + 1 ,v92[4] do v304=v304   .. v90[v457] ;end v90[v92[2]]=v304;break;end if (v302==0) then v303=v92[3];v304=v90[v303];v302=1;end end else v90[v92[2]][v90[v92[3]]]=v90[v92[4]];end elseif (v93<=84) then if (v93<=82) then local v173=0;local v174;local v175;local v176;local v177;while true do if (v173==1) then v85=(v176 + v174) -1 ;v177=0;v173=2;end if (2==v173) then for v393=v174,v85 do v177=v177 + 1 ;v90[v393]=v175[v177];end break;end if (v173==0) then v174=v92[2];v175,v176=v83(v90[v174](v21(v90,v174 + 1 ,v85)));v173=1;end end elseif (v93==83) then v90[v92[2]]=v90[v92[3]] + v92[4] ;else local v308=0;local v309;while true do if (v308==0) then v309=v92[2];v90[v309](v21(v90,v309 + 1 ,v85));break;end end end elseif (v93<=(1224 -(116 + 1022))) then if (v93>85) then local v310=0;local v311;while true do if (0==v310) then v311=v92[2];v90[v311](v21(v90,v311 + 1 ,v92[3]));break;end end else local v312=0;local v313;while true do if (v312==0) then v313=v92[8 -6 ];v90[v313]=v90[v313](v21(v90,v313 + 1 ,v92[3]));break;end end end elseif (v93>87) then local v314=0;local v315;local v316;local v317;local v318;while true do if (v314==2) then for v458=v315,v85 do v318=v318 + (3 -2) ;v90[v458]=v316[v318];end break;end if (v314==0) then v315=v92[2];v316,v317=v83(v90[v315](v90[v315 + 1 ]));v314=1;end if (1==v314) then v85=(v317 + v315) -1 ;v318=0 + 0 ;v314=2;end end else local v319=v92[2];v90[v319](v21(v90,v319 + 1 ,v92[3]));end elseif (v93<=94) then if (v93<=91) then if (v93<=89) then local v178=v92[2];do return v21(v90,v178,v85);end elseif (v93==(319 -229)) then v90[v92[861 -(814 + 45) ]]= #v90[v92[3]];else local v321=0;local v322;local v323;local v324;while true do if (v321==1) then v324={};v323=v18({},{[v7("\194\242\29\219\74\178\229","\215\157\173\116\181\46")]=function(v461,v462) local v463=0;local v464;while true do if (v463==0) then v464=v324[v462];return v464[1][v464[2]];end end end,[v7("\10\139\133\247\205\60\186\143\247\194","\186\85\212\235\146")]=function(v465,v466,v467) local v468=v324[v466];v468[1][v468[2]]=v467;end});v321=2;end if (v321==2) then for v470=1,v92[4] do v84=v84 + 1 ;local v471=v80[v84];if (v471[2 -1 ]==(6 + 95)) then v324[v470-1 ]={v90,v471[3]};else v324[v470-1 ]={v56,v471[3]};end v89[ #v89 + 1 ]=v324;end v90[v92[887 -(261 + 624) ]]=v41(v322,v323,v57);break;end if (v321==0) then v322=v81[v92[3]];v323=nil;v321=1;end end end elseif (v93<=92) then for v190=v92[2],v92[3] do v90[v190]=nil;end elseif (v93==93) then do return v90[v92[2]];end else local v325=0;local v326;while true do if (v325==0) then v326=v92[3 -1 ];v90[v326]=v90[v326](v21(v90,v326 + 1 ,v85));break;end end end elseif (v93<=97) then if (v93<=95) then local v179=0;local v180;local v181;while true do if (0==v179) then v180=v92[3];v181=v90[v180];v179=1;end if (1==v179) then for v396=v180 + 1 ,v92[4] do v181=v181   .. v90[v396] ;end v90[v92[2]]=v181;break;end end elseif (v93==96) then local v327=0;local v328;local v329;local v330;local v331;while true do if (v327==2) then for v473=v328,v85 do v331=v331 + 1 ;v90[v473]=v329[v331];end break;end if (v327==1) then v85=(v330 + v328) -(1081 -(1020 + 60)) ;v331=0;v327=2;end if (v327==0) then v328=v92[2];v329,v330=v83(v90[v328](v21(v90,v328 + 1 ,v92[3])));v327=1;end end else local v332=0;local v333;local v334;while true do if (v332==1) then for v476=v333 + 1 ,v85 do v15(v334,v90[v476]);end break;end if (0==v332) then v333=v92[2];v334=v90[v333];v332=1;end end end elseif (v93<=(1522 -(630 + 793))) then if (v93>98) then if (v90[v92[2]]==v92[4]) then v84=v84 + 1 ;else v84=v92[9 -6 ];end elseif (v92[2]==v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93>100) then v90[v92[2]]=v90[v92[3]];else v90[v92[2]][v90[v92[3]]]=v92[18 -14 ];end v84=v84 + 1 ;end end;end return v41(v40(),{},v28)(...);end if (v29==1) then function v32(v61,v62,v63) if v63 then local v100=0;local v101;while true do if (0==v100) then v101=(v61/(2^(v62-1)))%(2^(((v63-(1 -0)) -(v62-1)) + 1)) ;return v101-(v101%1) ;end end else local v102=2^(v62-1) ;return (((v61%(v102 + v102))>=v102) and 1) or (0 -0) ;end end v33=nil;function v33() local v64=v9(v27,v30,v30);v30=v30 + 1 ;return v64;end v34=nil;v29=2;end if (v29==2) then function v34() local v65=0;local v66;local v67;while true do if (v65==1) then return (v67 * 256) + v66 ;end if (0==v65) then v66,v67=v9(v27,v30,v30 + 2 );v30=v30 + 2 ;v65=1;end end end v35=nil;function v35() local v68=0;local v69;local v70;local v71;local v72;while true do if (v68==0) then v69,v70,v71,v72=v9(v27,v30,v30 + 3 );v30=v30 + 4 ;v68=1;end if (v68==1) then return (v72 * 16777216) + (v71 * 65536) + (v70 * 256) + v69 ;end end end v36=nil;v29=3;end if (v29==4) then v39=nil;function v39(...) return {...},v20("#",...);end v40=nil;function v40() local v73=0;local v74;local v75;local v76;local v77;local v78;local v79;while true do if (v73==2) then for v110=1,v35() do local v111=0;local v112;while true do if (v111==0) then v112=v33();if (v32(v112,1,1)==0) then local v122=v32(v112,2,3);local v123=v32(v112,4,6);local v124={v34(),v34(),nil,nil};if (v122==0) then local v126=0;while true do if (0==v126) then v124[3]=v34();v124[4]=v34();break;end end elseif (v122==(878 -(282 + 595))) then v124[3]=v35();elseif (v122==2) then v124[3]=v35() -(2^16) ;elseif (v122==(1640 -(1523 + 114))) then v124[3]=v35() -(2^16) ;v124[4]=v34();end if (v32(v123,1,1)==1) then v124[2 + 0 ]=v79[v124[2]];end if (v32(v123,2,2 -0 )==1) then v124[3]=v79[v124[3]];end if (v32(v123,3,3)==1) then v124[4]=v79[v124[4]];end v74[v110]=v124;end break;end end end for v113=1,v35() do v75[v113-1 ]=v40();end return v77;end if (v73==1) then v78=v35();v79={};for v115=1 + 0 ,v78 do local v116=v33();local v117;if (v116==1) then v117=v33()~=0 ;elseif (v116==2) then v117=v36();elseif (v116==3) then v117=v37();end v79[v115]=v117;end v77[3]=v33();v73=2;end if (v73==0) then v74={};v75={};v76={};v77={v74,v75,nil,v76};v73=1;end end end v29=5;end end end return vleft)
