local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v42=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v42,v42 + 1 )),v1(v2(v25,1 + (v42% #v25) ,1 + (v42% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=0;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;local v40;local v41;while true do if (v29==3) then v35=nil;function v35() local v43=0;local v44;local v45;local v46;local v47;while true do if (v43==1) then return (v47 * 16777216) + (v46 * (66155 -(555 + 64))) + (v45 * 256) + v44 ;end if (0==v43) then v44,v45,v46,v47=v9(v27,v30,v30 + 3 );v30=v30 + 4 ;v43=1;end end end v36=nil;v29=4;end if (v29==1) then v32=nil;function v32(v48,v49,v50) if v50 then local v95=0;local v96;while true do if (v95==0) then v96=(v48/(2^(v49-1)))%(2^(((v50-1) -(v49-1)) + 1)) ;return v96-(v96%1) ;end end else local v97=0;local v98;while true do if (v97==0) then v98=2^(v49-1) ;return (((v48%(v98 + v98))>=v98) and 1) or (0 -0) ;end end end end v33=nil;v29=2;end if (v29==2) then function v33() local v51=0;local v52;while true do if (v51==1) then return v52;end if (v51==0) then v52=v9(v27,v30,v30);v30=v30 + 1 ;v51=1;end end end v34=nil;function v34() local v53=0;local v54;local v55;while true do if (v53==0) then v54,v55=v9(v27,v30,v30 + 2 );v30=v30 + 2 ;v53=1;end if (v53==1) then return (v55 * (659 -403)) + v54 ;end end end v29=3;end if (v29==0) then v30=1;v31=nil;v27=v12(v11(v27,5),v7("\179\125","\52\157\83\191\231"),function(v56) if (v9(v56,5 -3 )==(226 -147)) then local v99=0;while true do if (v99==0) then v31=v8(v11(v56,1,1));return "";end end else local v100=0;local v101;while true do if (v100==0) then v101=v10(v8(v56,16));if v31 then local v123=0;local v124;while true do if (v123==1) then return v124;end if (0==v123) then v124=v13(v101,v31);v31=nil;v123=1;end end else return v101;end break;end end end end);v29=1;end if (5==v29) then v38=v35;v39=nil;function v39(...) return {...},v20("#",...);end v29=6;end if (v29==6) then v40=nil;function v40() local v57=0;local v58;local v59;local v60;local v61;local v62;local v63;while true do if (1==v57) then v62=v35();v63={};for v106=1,v62 do local v107=0;local v108;local v109;while true do if (v107==0) then v108=v33();v109=nil;v107=1;end if (v107==1) then if (v108==1) then v109=v33()~=0 ;elseif (v108==2) then v109=v36();elseif (v108==3) then v109=v37();end v63[v106]=v109;break;end end end v61[1640 -(1523 + 114) ]=v33();v57=2;end if (v57==2) then for v110=1 + 0 ,v35() do local v111=v33();if (v32(v111,1,1)==0) then local v119=v32(v111,2,3);local v120=v32(v111,5 -1 ,6);local v121={v34(),v34(),nil,nil};if (v119==0) then local v126=0;while true do if (v126==0) then v121[3]=v34();v121[4]=v34();break;end end elseif (v119==1) then v121[1068 -(68 + 997) ]=v35();elseif (v119==2) then v121[3]=v35() -((1272 -(226 + 1044))^16) ;elseif (v119==3) then local v137=0;while true do if (v137==0) then v121[12 -9 ]=v35() -(2^16) ;v121[4]=v34();break;end end end if (v32(v120,1,1)==1) then v121[2]=v63[v121[119 -(32 + 85) ]];end if (v32(v120,2,2 + 0 )==1) then v121[3]=v63[v121[3]];end if (v32(v120,3,3)==1) then v121[4]=v63[v121[4]];end v58[v110]=v121;end end for v112=1 + 0 ,v35() do v59[v112-1 ]=v40();end return v61;end if (v57==0) then v58={};v59={};v60={};v61={v58,v59,nil,v60};v57=1;end end end v41=nil;v29=7;end if (v29==7) then function v41(v64,v65,v66) local v67=v64[1];local v68=v64[2];local v69=v64[3];return function(...) local v79=v67;local v80=v68;local v81=v69;local v82=v39;local v83=1;local v84= -1;local v85={};local v86={...};local v87=v20("#",...) -1 ;local v88={};local v89={};for v102=957 -(892 + 65) ,v87 do if (v102>=v81) then v85[v102-v81 ]=v86[v102 + 1 ];else v89[v102]=v86[v102 + 1 ];end end local v90=(v87-v81) + 1 ;local v91;local v92;while true do v91=v79[v83];v92=v91[1];if (v92<=60) then if (v92<=29) then if (v92<=14) then if (v92<=6) then if (v92<=2) then if (v92<=0) then local v138=0;local v139;local v140;while true do if (v138==1) then for v405=v139 + 1 ,v84 do v15(v140,v89[v405]);end break;end if (v138==0) then v139=v91[2];v140=v89[v139];v138=1;end end elseif (v92>1) then v89[v91[2]]=v89[v91[3]][v89[v91[4]]];else local v160=v91[2];local v161,v162=v82(v89[v160](v89[v160 + 1 ]));v84=(v162 + v160) -1 ;local v163=0 -0 ;for v352=v160,v84 do v163=v163 + 1 ;v89[v352]=v161[v163];end end elseif (v92<=4) then if (v92>3) then local v164=v91[2];local v165={};for v355=1, #v88 do local v356=0;local v357;while true do if (v356==0) then v357=v88[v355];for v493=0, #v357 do local v494=0;local v495;local v496;local v497;while true do if (0==v494) then v495=v357[v493];v496=v495[1];v494=1;end if (v494==1) then v497=v495[2];if ((v496==v89) and (v497>=v164)) then v165[v497]=v496[v497];v495[1 -0 ]=v165;end break;end end end break;end end end else v89[v91[2]][v89[v91[3]]]=v91[4];end elseif (v92>5) then v89[v91[2]]=v91[3];elseif v89[v91[2]] then v83=v83 + 1 ;else v83=v91[3];end elseif (v92<=10) then if (v92<=8) then if (v92==7) then v89[v91[2]]=v41(v80[v91[4 -1 ]],nil,v66);else v89[v91[2]]=v89[v91[3]]%v89[v91[4]] ;end elseif (v92==9) then for v358=v91[2],v91[3] do v89[v358]=nil;end else v66[v91[353 -(87 + 263) ]]=v89[v91[2]];end elseif (v92<=12) then if (v92==11) then do return v89[v91[2]];end elseif (v89[v91[2]]~=v91[184 -(67 + 113) ]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v92>13) then local v174=0;local v175;local v176;while true do if (v174==0) then v175=v91[2];v176=v89[v91[3 + 0 ]];v174=1;end if (v174==1) then v89[v175 + 1 ]=v176;v89[v175]=v176[v91[9 -5 ]];break;end end elseif (v89[v91[2]]==v89[v91[4]]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v92<=21) then if (v92<=(13 + 4)) then if (v92<=15) then local v141=v91[2];local v142,v143=v82(v89[v141](v21(v89,v141 + 1 ,v91[11 -8 ])));v84=(v143 + v141) -1 ;local v144=0;for v152=v141,v84 do v144=v144 + 1 ;v89[v152]=v142[v144];end elseif (v92==16) then if (v89[v91[954 -(802 + 150) ]]<v89[v91[4]]) then v83=v83 + 1 ;else v83=v91[3];end else v89[v91[2]]=v89[v91[3]]/v89[v91[4]] ;end elseif (v92<=19) then if (v92==18) then v89[v91[2]]= #v89[v91[3]];else local v179=0;local v180;while true do if (v179==0) then v180=v91[2];do return v21(v89,v180,v180 + v91[3] );end break;end end end elseif (v92==20) then local v181=0;local v182;local v183;local v184;local v185;while true do if (v181==2) then for v463=v182,v84 do local v464=0;while true do if (v464==0) then v185=v185 + 1 ;v89[v463]=v183[v185];break;end end end break;end if (v181==0) then v182=v91[2];v183,v184=v82(v89[v182](v89[v182 + 1 ]));v181=1;end if (v181==1) then v84=(v184 + v182) -1 ;v185=0;v181=2;end end else v89[v91[2]][v91[3]]=v91[4];end elseif (v92<=25) then if (v92<=(61 -38)) then if (v92>22) then local v188=v91[2];do return v89[v188](v21(v89,v188 + 1 ,v91[3]));end elseif  not v89[v91[2]] then v83=v83 + 1 ;else v83=v91[3];end elseif (v92==24) then local v189=v91[2];v89[v189]=v89[v189](v21(v89,v189 + 1 ,v84));else local v191=0;local v192;local v193;local v194;while true do if (v191==1) then v194=v89[v192] + v193 ;v89[v192]=v194;v191=2;end if (2==v191) then if (v193>0) then if (v194<=v89[v192 + 1 ]) then v83=v91[5 -2 ];v89[v192 + 3 ]=v194;end elseif (v194>=v89[v192 + 1 ]) then local v508=0;while true do if (v508==0) then v83=v91[3];v89[v192 + 3 ]=v194;break;end end end break;end if (v191==0) then v192=v91[2];v193=v89[v192 + 2 ];v191=1;end end end elseif (v92<=27) then if (v92==26) then v89[v91[2]]=v89[v91[3]][v89[v91[4]]];else v89[v91[2 + 0 ]]=v91[3]~=0 ;end elseif (v92>28) then v89[v91[2]]={};else local v199=v91[2];local v200,v201=v82(v89[v199](v21(v89,v199 + 1 ,v84)));v84=(v201 + v199) -1 ;local v202=0;for v360=v199,v84 do v202=v202 + (998 -(915 + 82)) ;v89[v360]=v200[v202];end end elseif (v92<=44) then if (v92<=36) then if (v92<=32) then if (v92<=30) then v89[v91[2]][v89[v91[3]]]=v89[v91[4]];elseif (v92==31) then local v203=0;local v204;while true do if (v203==0) then v204=v91[2];v89[v204](v89[v204 + 1 ]);break;end end else local v205=v91[5 -3 ];v89[v205]=v89[v205](v89[v205 + 1 ]);end elseif (v92<=34) then if (v92==33) then local v207=0;local v208;while true do if (v207==0) then v208=v91[2 + 0 ];do return v21(v89,v208,v84);end break;end end else v89[v91[2 -0 ]]=v91[3];end elseif (v92==35) then v89[v91[1189 -(1069 + 118) ]]=v89[v91[3]]%v89[v91[4]] ;else local v212=v91[2];local v213=v89[v91[3]];v89[v212 + (2 -1) ]=v213;v89[v212]=v213[v89[v91[4]]];end elseif (v92<=40) then if (v92<=38) then if (v92==37) then local v217=v91[2];v89[v217]=v89[v217](v21(v89,v217 + 1 ,v91[3]));else v89[v91[2]]=v89[v91[6 -3 ]] + v91[4] ;end elseif (v92==39) then local v220=v91[2];v89[v220]=v89[v220]();else local v222=v91[2];v89[v222](v21(v89,v222 + 1 ,v84));end elseif (v92<=42) then if (v92>41) then v89[v91[2]]=v66[v91[3]];else local v225=v91[2];local v226=v89[v225];local v227=v89[v225 + 2 ];if (v227>0) then if (v226>v89[v225 + 1 ]) then v83=v91[3];else v89[v225 + 3 ]=v226;end elseif (v226<v89[v225 + 1 ]) then v83=v91[3];else v89[v225 + 3 ]=v226;end end elseif (v92==43) then if (v89[v91[2]]==v91[4]) then v83=v83 + 1 ;else v83=v91[3];end else v89[v91[2]]= #v89[v91[3]];end elseif (v92<=52) then if (v92<=48) then if (v92<=46) then if (v92==45) then v89[v91[2]]=v89[v91[3]];else local v231=0;local v232;while true do if (v231==0) then v232=v91[2];v89[v232]=v89[v232](v21(v89,v232 + 1 + 0 ,v91[3]));break;end end end elseif (v92>47) then v89[v91[2]]=v91[3] + v89[v91[4]] ;else local v234=v91[2];local v235={v89[v234](v21(v89,v234 + 1 ,v84))};local v236=0 -0 ;for v363=v234,v91[4] do v236=v236 + 1 ;v89[v363]=v235[v236];end end elseif (v92<=50) then if (v92>(49 + 0)) then for v366=v91[2],v91[3] do v89[v366]=nil;end elseif (v89[v91[2]]<=v91[4]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v92==51) then v83=v91[3];else do return;end end elseif (v92<=56) then if (v92<=54) then if (v92>53) then local v238=v91[2];local v239=v89[v91[794 -(368 + 423) ]];v89[v238 + 1 ]=v239;v89[v238]=v239[v91[12 -8 ]];elseif (v89[v91[2]]==v89[v91[4]]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v92==(73 -(10 + 8))) then local v243=0;local v244;local v245;local v246;local v247;while true do if (v243==1) then v84=(v246 + v244) -1 ;v247=0;v243=2;end if (v243==2) then for v469=v244,v84 do local v470=0;while true do if (v470==0) then v247=v247 + 1 ;v89[v469]=v245[v247];break;end end end break;end if (v243==0) then v244=v91[2];v245,v246=v82(v89[v244](v21(v89,v244 + 1 ,v84)));v243=1;end end else do return v89[v91[2]]();end end elseif (v92<=58) then if (v92==57) then local v248=v91[2];local v249=v89[v248];local v250=v89[v248 + (7 -5) ];if (v250>0) then if (v249>v89[v248 + 1 ]) then v83=v91[3];else v89[v248 + 3 ]=v249;end elseif (v249<v89[v248 + 1 ]) then v83=v91[3];else v89[v248 + 3 ]=v249;end else v89[v91[2]]=v41(v80[v91[3]],nil,v66);end elseif (v92>59) then v89[v91[2]]();else local v252=0;local v253;while true do if (v252==0) then v253=v91[444 -(416 + 26) ];v89[v253](v21(v89,v253 + 1 ,v91[3]));break;end end end elseif (v92<=91) then if (v92<=75) then if (v92<=(213 -146)) then if (v92<=63) then if (v92<=61) then local v147=v91[1 + 1 ];local v148={v89[v147](v89[v147 + 1 ])};local v149=0;for v155=v147,v91[4] do v149=v149 + 1 ;v89[v155]=v148[v149];end elseif (v92==62) then if (v89[v91[2]]~=v91[6 -2 ]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v89[v91[2]]<v91[4]) then v83=v83 + 1 ;else v83=v91[441 -(145 + 293) ];end elseif (v92<=65) then if (v92>64) then v89[v91[2]][v91[3]]=v91[4];else local v256=0;local v257;while true do if (v256==0) then v257=v91[2];v89[v257]=v89[v257](v89[v257 + 1 ]);break;end end end elseif (v92==66) then local v258=v91[2];local v259={};for v368=1, #v88 do local v369=v88[v368];for v416=0, #v369 do local v417=v369[v416];local v418=v417[1];local v419=v417[432 -(44 + 386) ];if ((v418==v89) and (v419>=v258)) then v259[v419]=v418[v419];v417[1]=v259;end end end else v89[v91[2]]=v89[v91[3]] + v91[4] ;end elseif (v92<=71) then if (v92<=69) then if (v92==68) then do return;end else v89[v91[2]]=v91[3] + v89[v91[4]] ;end elseif (v92==70) then v89[v91[2]]=v89[v91[1489 -(998 + 488) ]] -v89[v91[4]] ;else local v263=v91[1 + 1 ];do return v21(v89,v263,v84);end end elseif (v92<=73) then if (v92==72) then v89[v91[2]]=v89[v91[3]][v91[4]];elseif (v89[v91[2]]~=v89[v91[4]]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v92>74) then v89[v91[2]]=v65[v91[3]];elseif (v91[2 + 0 ]==v89[v91[776 -(201 + 571) ]]) then v83=v83 + 1 ;else v83=v91[1141 -(116 + 1022) ];end elseif (v92<=(345 -262)) then if (v92<=79) then if (v92<=77) then if (v92>76) then if (v89[v91[2]]<=v91[4]) then v83=v83 + 1 ;else v83=v91[3];end else v89[v91[2]]=v66[v91[3]];end elseif (v92==78) then v89[v91[2]][v89[v91[3]]]=v91[4];else v89[v91[2]][v89[v91[3]]]=v89[v91[4]];end elseif (v92<=81) then if (v92>80) then v89[v91[2]]=v89[v91[2 + 1 ]] -v89[v91[4]] ;else local v275=v91[2];local v276=v89[v275];for v370=v275 + 1 ,v84 do v15(v276,v89[v370]);end end elseif (v92==82) then local v277=v80[v91[3]];local v278;local v279={};v278=v18({},{[v7("\202\146\44\35\236\116\237","\17\149\205\69\77\136")]=function(v371,v372) local v373=0;local v374;while true do if (v373==0) then v374=v279[v372];return v374[1][v374[2]];end end end,[v7("\152\248\245\82\101\219\142\163\194\227","\224\199\167\155\55\18\178")]=function(v375,v376,v377) local v378=0;local v379;while true do if (v378==0) then v379=v279[v376];v379[1][v379[2]]=v377;break;end end end});for v380=1,v91[4] do local v381=0;local v382;while true do if (1==v381) then if (v382[1]==98) then v279[v380-1 ]={v89,v382[3]};else v279[v380-1 ]={v65,v382[3]};end v88[ #v88 + 1 ]=v279;break;end if (v381==0) then v83=v83 + (3 -2) ;v382=v79[v83];v381=1;end end end v89[v91[2]]=v41(v277,v278,v66);elseif (v89[v91[2]]<v89[v91[4]]) then v83=v83 + (860 -(814 + 45)) ;else v83=v91[3];end elseif (v92<=(214 -127)) then if (v92<=85) then if (v92>84) then local v281=v91[2];local v282=v91[4];local v283=v281 + 2 ;local v284={v89[v281](v89[v281 + 1 ],v89[v283])};for v383=1,v282 do v89[v283 + v383 ]=v284[v383];end local v285=v284[1];if v285 then local v424=0;while true do if (v424==0) then v89[v283]=v285;v83=v91[3];break;end end else v83=v83 + 1 ;end else local v286=0;local v287;local v288;local v289;while true do if (v286==2) then if (v288>0) then if (v289<=v89[v287 + 1 ]) then local v511=0;while true do if (v511==0) then v83=v91[1 + 2 ];v89[v287 + 3 ]=v289;break;end end end elseif (v289>=v89[v287 + 1 ]) then local v512=0;while true do if (0==v512) then v83=v91[3];v89[v287 + 3 ]=v289;break;end end end break;end if (v286==1) then v289=v89[v287] + v288 ;v89[v287]=v289;v286=2;end if (v286==0) then v287=v91[2];v288=v89[v287 + 2 ];v286=1;end end end elseif (v92==86) then local v290=0;local v291;while true do if (0==v290) then v291=v91[1 + 1 ];v89[v291](v89[v291 + 1 ]);break;end end else local v292=v91[2];v89[v292](v21(v89,v292 + (886 -(261 + 624)) ,v91[3]));end elseif (v92<=89) then if (v92==88) then local v293=v91[2];local v294={v89[v293](v21(v89,v293 + 1 ,v84))};local v295=0;for v386=v293,v91[4] do local v387=0;while true do if (v387==0) then v295=v295 + 1 ;v89[v386]=v294[v295];break;end end end else do return v89[v91[2]];end end elseif (v92==90) then local v296=0;local v297;local v298;local v299;local v300;while true do if (v296==2) then for v485=v297,v84 do v300=v300 + 1 ;v89[v485]=v298[v300];end break;end if (0==v296) then v297=v91[2];v298,v299=v82(v89[v297](v21(v89,v297 + 1 ,v91[3])));v296=1;end if (v296==1) then v84=(v299 + v297) -(1081 -(1020 + 60)) ;v300=0;v296=2;end end else v89[v91[2]]=v89[v91[3]]%v91[4] ;end elseif (v92<=106) then if (v92<=(1521 -(630 + 793))) then if (v92<=94) then if (v92<=92) then v89[v91[2]]=v89[v91[3]][v91[4]];elseif (v92==93) then if v89[v91[2]] then v83=v83 + 1 ;else v83=v91[3];end elseif (v89[v91[2]]==v91[4]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v92<=96) then if (v92==95) then local v302=0;local v303;while true do if (v302==0) then v303=v91[6 -4 ];v89[v303]=v89[v303]();break;end end else local v304=0;local v305;while true do if (v304==0) then v305=v91[2];do return v89[v305](v21(v89,v305 + 1 ,v91[3]));end break;end end end elseif (v92==97) then local v306=v91[2];local v307=v89[v91[3]];v89[v306 + 1 ]=v307;v89[v306]=v307[v89[v91[4]]];else v89[v91[2]]=v89[v91[3]];end elseif (v92<=102) then if (v92<=100) then if (v92>99) then v89[v91[2]]=v65[v91[3]];else v89[v91[2]]={};end elseif (v92>101) then v66[v91[3]]=v89[v91[2]];else v89[v91[2]]();end elseif (v92<=104) then if (v92==103) then do return v89[v91[9 -7 ]]();end else local v318=v91[2];local v319={v89[v318](v89[v318 + 1 ])};local v320=0;for v388=v318,v91[4] do local v389=0;while true do if (v389==0) then v320=v320 + 1 ;v89[v388]=v319[v320];break;end end end end elseif (v92>105) then local v321=v91[2];local v322=v91[4];local v323=v321 + 2 ;local v324={v89[v321](v89[v321 + 1 ],v89[v323])};for v390=1,v322 do v89[v323 + v390 ]=v324[v390];end local v325=v324[1];if v325 then v89[v323]=v325;v83=v91[3];else v83=v83 + 1 ;end else v83=v91[3];end elseif (v92<=(45 + 69)) then if (v92<=110) then if (v92<=108) then if (v92==(368 -261)) then if (v89[v91[2]]<v91[4]) then v83=v83 + (1748 -(760 + 987)) ;else v83=v91[3];end else local v327=0;local v328;while true do if (v327==0) then v328=v91[2];v89[v328]=v89[v328](v21(v89,v328 + (1914 -(1789 + 124)) ,v84));break;end end end elseif (v92==109) then v65[v91[3]]=v89[v91[2]];else v89[v91[2]]=v91[3]~=0 ;end elseif (v92<=112) then if (v92==111) then v89[v91[2]]=v89[v91[3]] * v89[v91[770 -(745 + 21) ]] ;else v89[v91[2]]=v89[v91[3]]/v89[v91[4]] ;end elseif (v92>113) then v89[v91[1 + 1 ]]=v89[v91[3]] * v89[v91[4]] ;else v89[v91[2]][v91[3]]=v89[v91[4]];end elseif (v92<=118) then if (v92<=116) then if (v92>115) then v65[v91[3]]=v89[v91[2]];else v89[v91[2]][v91[3]]=v89[v91[4]];end elseif (v92==117) then local v341=0;local v342;while true do if (v341==0) then v342=v91[2];v89[v342](v21(v89,v342 + 1 ,v84));break;end end else v89[v91[5 -3 ]]=v89[v91[3]]%v91[4] ;end elseif (v92<=120) then if (v92==119) then if (v91[7 -5 ]==v89[v91[4]]) then v83=v83 + 1 ;else v83=v91[3];end else local v344=v80[v91[3]];local v345;local v346={};v345=v18({},{[v7("\3\251\115\130\249\73\235","\147\92\164\26\236\157\44")]=function(v393,v394) local v395=0;local v396;while true do if (0==v395) then v396=v346[v394];return v396[1][v396[2]];end end end,[v7("\115\112\85\47\5\69\65\95\47\10","\114\44\47\59\74")]=function(v397,v398,v399) local v400=v346[v398];v400[1][v400[2]]=v399;end});for v402=1,v91[4] do local v403=0;local v404;while true do if (v403==0) then v83=v83 + 1 ;v404=v79[v83];v403=1;end if (v403==1) then if (v404[1]==(1 + 97)) then v346[v402-1 ]={v89,v404[3]};else v346[v402-1 ]={v65,v404[3]};end v88[ #v88 + 1 ]=v346;break;end end end v89[v91[2]]=v41(v344,v345,v66);end elseif (v92>121) then if  not v89[v91[2]] then v83=v83 + 1 ;else v83=v91[3];end elseif (v89[v91[2]]~=v89[v91[4]]) then v83=v83 + 1 ;else v83=v91[3];end v83=v83 + (1056 -(87 + 968)) ;end end;end return v41(v40(),{},v28)(...);end if (v29==4) then function v36() local v70=v35();local v71=v35();local v72=1;local v73=(v32(v71,932 -(857 + 74) ,20) * (2^32)) + v70 ;local v74=v32(v71,589 -(367 + 201) ,958 -(214 + 713) );local v75=((v32(v71,32)==1) and  -(1 + 0)) or 1 ;if (v74==0) then if (v73==0) then return v75 * 0 ;else local v118=0;while true do if (v118==0) then v74=1 + 0 ;v72=0;break;end end end elseif (v74==2047) then return ((v73==0) and (v75 * (1/0))) or (v75 * NaN) ;end return v16(v75,v74-1023 ) * (v72 + (v73/(2^52))) ;end v37=nil;function v37(v76) local v77;if  not v76 then v76=v35();if (v76==0) then return "";end end v77=v11(v27,v30,(v30 + v76) -1 );v30=v30 + v76 ;local v78={};for v93=878 -(282 + 595) , #v77 do v78[v93]=v10(v9(v11(v77,v93,v93)));end return v14(v78);end v29=5;end end end return vleft)
