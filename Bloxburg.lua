--BloxBurg
local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v82=v2(v0(v30,16));if v19 then local v89=v5(v82,v19);v19=nil;return v89;else return v82;end end end);local function v20(v31,v32,v33) if v33 then local v83=(v31/((5 -(1 + 2))^(v32-(2 -1))))%((3 -1)^(((v33-(2 -1)) -(v32-(620 -((1432 -(282 + 595)) + 64)))) + 1)) ;return v83-(v83%(932 -(857 + 74))) ;else local v84=(570 -(367 + 201))^(v32-(928 -(214 + 713))) ;return (((v31%(v84 + v84))>=v84) and (1 + 0)) or 0 ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + (1639 -(1523 + 114)) );v18=v18 + 2 ;return (v36 * (231 + 25)) + v35 ;end local function v23() local v37=0 -0 ;local v38;local v39;local v40;local v41;while true do if (v37==(1066 -(68 + 997))) then return (v41 * (16778486 -(226 + 1044))) + (v40 * (285370 -219834)) + (v39 * (373 -((58 -26) + 85))) + v38 ;end if (v37==(0 + 0)) then v38,v39,v40,v41=v1(v16,v18,v18 + 1 + 2 );v18=v18 + (961 -(892 + 65)) ;v37=(3 -1) -1 ;end end end local function v24() local v42=350 -((529 -(416 + 26)) + 263) ;local v43;local v44;local v45;local v46;local v47;local v48;while true do if (v42==(182 -((213 -146) + 113))) then v47=v20(v44,16 + 5 ,75 -44 );v48=((v20(v44,32)==(1 + 0)) and  -(3 -2)) or (953 -(802 + 150)) ;v42=7 -4 ;end if (v42==(1 -0)) then v45=1 + 0 ;v46=(v20(v44,1 + 0 ,1017 -(915 + 82) ) * ((5 -(4 -1))^(19 + 13))) + v43 ;v42=(440 -(145 + 293)) -(430 -(44 + 386)) ;end if (v42==(1190 -(1069 + 118))) then if (v47==(0 -0)) then if (v46==(0 -0)) then return v48 * 0 ;else local v97=0;while true do if (v97==0) then v47=1;v45=0 + 0 ;break;end end end elseif (v47==(3636 -1589)) then return ((v46==(0 + 0)) and (v48 * (1/0))) or (v48 * NaN) ;end return v8(v48,v47-(1814 -(368 + 423)) ) * (v45 + (v46/((6 -4)^52))) ;end if (v42==(18 -((1496 -(998 + 488)) + 8))) then v43=v23();v44=v23();v42=(1 + 2) -(2 + 0) ;end end end local function v25(v49) local v50;if  not v49 then local v85=772 -(201 + 571) ;while true do if (v85==(1138 -(116 + (3730 -2708)))) then v49=v23();if (v49==(0 -0)) then return "";end break;end end end v50=v3(v16,v18,(v18 + v49) -1 );v18=v18 + v49 ;local v51={};for v65=1 + 0 , #v50 do v51[v65]=v2(v1(v3(v50,v65,v65)));end return v6(v51);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=0;local v53;local v54;local v55;local v56;local v57;local v58;while true do local v67=0 -0 ;while true do if (v67==(0 + 0)) then if ((438 -(262 + 176))~=v52) then else local v94=1721 -(345 + 1376) ;local v95;while true do if (v94~=(688 -(198 + 490))) then else v95=0 -0 ;while true do if (v95==(4 -2)) then v52=1;break;end if (v95==1) then v55={};v56={v53,v54,nil,v55};v95=2;end if (v95==0) then v53={};v54={};v95=1;end end break;end end end if (v52==(1263 -(1091 + 171))) then local v96=0;while true do if (v96~=(0 + 0)) then else v57=v23();v58={};v96=3 -2 ;end if (v96~=1) then else for v105=1,v57 do local v106=0;local v107;local v108;while true do if (v106==(3 -2)) then if (v107==1) then v108=v21()~=(374 -(123 + 251)) ;elseif (v107==(9 -7)) then v108=v24();elseif (v107~=3) then else v108=v25();end v58[v105]=v108;break;end if (v106==0) then local v111=0;while true do if (0==v111) then v107=v21();v108=nil;v111=1;end if (v111==(699 -(208 + 490))) then v106=1 + 0 ;break;end end end end end v56[3]=v21();v96=2;end if (v96~=(1 + 1)) then else v52=2;break;end end end v67=1;end if (v67==(837 -(660 + 176))) then if (2~=v52) then else for v98=1,v23() do local v99=0 + 0 ;local v100;local v101;while true do if (v99~=(203 -(14 + 188))) then else while true do if (v100==0) then v101=v21();if (v20(v101,676 -(534 + 141) ,1 + 0 )~=(0 + 0)) then else local v195=0 + 0 ;local v196;local v197;local v198;while true do if (v195~=(1 -0)) then else local v320=0 -0 ;while true do if (v320~=(2 -1)) then else v195=2 + 0 ;break;end if ((0 + 0)==v320) then local v381=396 -(115 + 281) ;while true do if ((0 -0)==v381) then v198={v22(),v22(),nil,nil};if (v196==(0 -0)) then local v395=867 -(550 + 317) ;local v396;while true do if (v395==(0 -0)) then v396=0 -0 ;while true do if (0~=v396) then else v198[8 -5 ]=v22();v198[289 -(134 + 151) ]=v22();break;end end break;end end elseif (v196==(1666 -(970 + 695))) then v198[3]=v23();elseif (v196==(3 -1)) then v198[1993 -(582 + 1408) ]=v23() -(2^16) ;elseif (v196==(10 -7)) then local v401=0 -0 ;local v402;while true do if (0~=v401) then else v402=0 -0 ;while true do if (0~=v402) then else v198[1827 -(1195 + 629) ]=v23() -((2 -0)^16) ;v198[245 -(187 + 54) ]=v22();break;end end break;end end end v381=781 -(162 + 618) ;end if (v381~=1) then else v320=1;break;end end end end end if (v195~=(0 + 0)) then else local v321=0 + 0 ;while true do if ((0 -0)==v321) then v196=v20(v101,2,3);v197=v20(v101,6 -2 ,6);v321=1 + 0 ;end if (v321~=(1637 -(1373 + 263))) then else v195=1;break;end end end if (v195~=3) then else if (v20(v197,3,3)==1) then v198[4]=v58[v198[1004 -(451 + 549) ]];end v53[v98]=v198;break;end if (2~=v195) then else if (v20(v197,1 + 0 ,1)==1) then v198[2]=v58[v198[2 -0 ]];end if (v20(v197,2 -0 ,1386 -(746 + 638) )~=(1 + 0)) then else v198[4 -1 ]=v58[v198[344 -(218 + 123) ]];end v195=3;end end end break;end end break;end if (v99==(1581 -(1535 + 46))) then local v109=0 + 0 ;while true do if (v109==(1 + 0)) then v99=1;break;end if (v109~=(560 -(306 + 254))) then else v100=0;v101=nil;v109=1;end end end end end for v102=1,v23() do v54[v102-(1 + 0) ]=v28();end return v56;end break;end end end end local function v29(v59,v60,v61) local v62=v59[1];local v63=v59[2];local v64=v59[3];return function(...) local v68=v62;local v69=v63;local v70=v64;local v71=v27;local v72=1;local v73= -1;local v74={};local v75={...};local v76=v12("#",...) -1 ;local v77={};local v78={};for v86=0,v76 do if (v86>=v70) then v74[v86-v70 ]=v75[v86 + 1 ];else v78[v86]=v75[v86 + 1 ];end end local v79=(v76-v70) + 1 ;local v80;local v81;while true do v80=v68[v72];v81=v80[1];if (v81<=39) then if (v81<=19) then if (v81<=9) then if (v81<=4) then if (v81<=1) then if (v81>0) then local v112=0;local v113;while true do if (v112==0) then v113=v80[2];v78[v113]=v78[v113]();break;end end else local v114=0;local v115;local v116;while true do if (1==v114) then for v323=v115 + 1 ,v80[4] do v116=v116   .. v78[v323] ;end v78[v80[2]]=v116;break;end if (v114==0) then v115=v80[3];v116=v78[v115];v114=1;end end end elseif (v81<=2) then local v117=0;local v118;local v119;local v120;while true do if (v117==0) then v118=v80[2];v119={v78[v118](v78[v118 + 1 ])};v117=1;end if (v117==1) then v120=0;for v324=v118,v80[4] do v120=v120 + 1 ;v78[v324]=v119[v120];end break;end end elseif (v81==3) then v61[v80[3]]=v78[v80[2]];else v78[v80[2]]=v80[3]~=0 ;end elseif (v81<=6) then if (v81==5) then if v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end else v78[v80[2]]=v80[3];end elseif (v81<=7) then v78[v80[2]]=v80[3]~=0 ;elseif (v81==8) then local v222=v80[2];v78[v222]=v78[v222](v78[v222 + 1 ]);else v78[v80[2]]=v78[v80[3]] -v78[v80[4]] ;end elseif (v81<=14) then if (v81<=11) then if (v81==10) then v78[v80[2]]=v78[v80[3]][v80[4]];else local v126=0;local v127;while true do if (v126==0) then v127=v80[2];v78[v127](v78[v127 + 1 ]);break;end end end elseif (v81<=12) then v78[v80[2]][v80[3]]=v78[v80[4]];elseif (v81==13) then local v225=v80[2];local v226,v227=v71(v78[v225](v13(v78,v225 + 1 ,v80[3])));v73=(v227 + v225) -1 ;local v228=0;for v303=v225,v73 do v228=v228 + 1 ;v78[v303]=v226[v228];end else local v229=v80[2];local v230=v80[4];local v231=v229 + 2 ;local v232={v78[v229](v78[v229 + 1 ],v78[v231])};for v306=1,v230 do v78[v231 + v306 ]=v232[v306];end local v233=v232[1];if v233 then v78[v231]=v233;v72=v80[3];else v72=v72 + 1 ;end end elseif (v81<=16) then if (v81==15) then local v130=v80[2];local v131,v132=v71(v78[v130](v13(v78,v130 + 1 ,v80[3])));v73=(v132 + v130) -1 ;local v133=0;for v199=v130,v73 do v133=v133 + 1 ;v78[v199]=v131[v133];end else v78[v80[2]]=v29(v69[v80[3]],nil,v61);end elseif (v81<=17) then local v135=v80[2];local v136={v78[v135](v13(v78,v135 + 1 ,v73))};local v137=0;for v202=v135,v80[4] do local v203=0;while true do if (v203==0) then v137=v137 + 1 ;v78[v202]=v136[v137];break;end end end elseif (v81>18) then local v234=0;local v235;local v236;local v237;while true do if (v234==1) then v237={};v236=v10({},{__index=function(v359,v360) local v361=v237[v360];return v361[1][v361[2]];end,__newindex=function(v362,v363,v364) local v365=v237[v363];v365[1][v365[2]]=v364;end});v234=2;end if (v234==2) then for v367=1,v80[4] do local v368=0;local v369;while true do if (v368==1) then if (v369[1]==18) then v237[v367-1 ]={v78,v369[3]};else v237[v367-1 ]={v60,v369[3]};end v77[ #v77 + 1 ]=v237;break;end if (v368==0) then v72=v72 + 1 ;v369=v68[v72];v368=1;end end end v78[v80[2]]=v29(v235,v236,v61);break;end if (v234==0) then v235=v69[v80[3]];v236=nil;v234=1;end end else v78[v80[2]]=v78[v80[3]];end elseif (v81<=29) then if (v81<=24) then if (v81<=21) then if (v81==20) then local v138=0;local v139;local v140;local v141;local v142;while true do if (v138==1) then v73=(v141 + v139) -1 ;v142=0;v138=2;end if (0==v138) then v139=v80[2];v140,v141=v71(v78[v139](v78[v139 + 1 ]));v138=1;end if (2==v138) then for v331=v139,v73 do v142=v142 + 1 ;v78[v331]=v140[v142];end break;end end elseif (v80[2]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=22) then local v143=0;local v144;while true do if (v143==0) then v144=v80[2];v78[v144]=v78[v144](v13(v78,v144 + 1 ,v80[3]));break;end end elseif (v81>23) then local v241=0;local v242;local v243;local v244;while true do if (v241==1) then v244={};v243=v10({},{__index=function(v370,v371) local v372=v244[v371];return v372[1][v372[2]];end,__newindex=function(v373,v374,v375) local v376=v244[v374];v376[1][v376[2]]=v375;end});v241=2;end if (v241==2) then for v378=1,v80[4] do v72=v72 + 1 ;local v379=v68[v72];if (v379[1]==18) then v244[v378-1 ]={v78,v379[3]};else v244[v378-1 ]={v60,v379[3]};end v77[ #v77 + 1 ]=v244;end v78[v80[2]]=v29(v242,v243,v61);break;end if (v241==0) then v242=v69[v80[3]];v243=nil;v241=1;end end else v72=v80[3];end elseif (v81<=26) then if (v81>25) then v78[v80[2]][v80[3]]=v80[4];else v78[v80[2]]=v78[v80[3]]/v78[v80[4]] ;end elseif (v81<=27) then if (v78[v80[2]]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81>28) then if  not v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end else v78[v80[2]]=v60[v80[3]];end elseif (v81<=34) then if (v81<=31) then if (v81>30) then local v148=v80[2];v78[v148](v78[v148 + 1 ]);else local v149=v80[2];local v150={};for v204=1, #v77 do local v205=v77[v204];for v249=0, #v205 do local v250=0;local v251;local v252;local v253;while true do if (1==v250) then v253=v251[2];if ((v252==v78) and (v253>=v149)) then local v382=0;while true do if (v382==0) then v150[v253]=v252[v253];v251[1]=v150;break;end end end break;end if (v250==0) then v251=v205[v249];v252=v251[1];v250=1;end end end end end elseif (v81<=32) then v78[v80[2]]=v61[v80[3]];elseif (v81>33) then if (v78[v80[2]]==v80[4]) then v72=v72 + 1 ;else v72=v80[3];end else v78[v80[2]]();end elseif (v81<=36) then if (v81==35) then v78[v80[2]]=v29(v69[v80[3]],nil,v61);else do return;end end elseif (v81<=37) then if (v80[2]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81>38) then if  not v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end else local v255=v80[2];v78[v255]=v78[v255]();end elseif (v81<=59) then if (v81<=49) then if (v81<=44) then if (v81<=41) then if (v81>40) then local v154=v80[2];local v155={};for v206=1, #v77 do local v207=v77[v206];for v257=0, #v207 do local v258=v207[v257];local v259=v258[1];local v260=v258[2];if ((v259==v78) and (v260>=v154)) then local v337=0;while true do if (v337==0) then v155[v260]=v259[v260];v258[1]=v155;break;end end end end end else v78[v80[2]]={};end elseif (v81<=42) then v78[v80[2]][v80[3]]=v78[v80[4]];elseif (v81==43) then v78[v80[2]]=v80[3];else v78[v80[2]]=v78[v80[3]][v80[4]];end elseif (v81<=46) then if (v81>45) then local v159=0;local v160;while true do if (v159==0) then v160=v80[2];v78[v160](v13(v78,v160 + 1 ,v73));break;end end else v78[v80[2]][v80[3]]=v80[4];end elseif (v81<=47) then local v163=0;local v164;local v165;while true do if (v163==1) then for v338=v164 + 1 ,v80[4] do v165=v165   .. v78[v338] ;end v78[v80[2]]=v165;break;end if (v163==0) then v164=v80[3];v165=v78[v164];v163=1;end end elseif (v81==48) then local v265=0;local v266;while true do if (0==v265) then v266=v80[2];v78[v266]=v78[v266](v13(v78,v266 + 1 ,v73));break;end end else v78[v80[2]]=v78[v80[3]][v78[v80[4]]];end elseif (v81<=54) then if (v81<=51) then if (v81>50) then local v166=v80[2];local v167=v80[4];local v168=v166 + 2 ;local v169={v78[v166](v78[v166 + 1 ],v78[v168])};for v208=1,v167 do v78[v168 + v208 ]=v169[v208];end local v170=v169[1];if v170 then v78[v168]=v170;v72=v80[3];else v72=v72 + 1 ;end else local v171=v80[2];v78[v171](v13(v78,v171 + 1 ,v80[3]));end elseif (v81<=52) then v78[v80[2]]=v78[v80[3]][v78[v80[4]]];elseif (v81>53) then v78[v80[2]]=v78[v80[3]] -v78[v80[4]] ;else local v272=v80[2];local v273,v274=v71(v78[v272](v78[v272 + 1 ]));v73=(v274 + v272) -1 ;local v275=0;for v316=v272,v73 do v275=v275 + 1 ;v78[v316]=v273[v275];end end elseif (v81<=56) then if (v81==55) then v78[v80[2]]= #v78[v80[3]];else local v175=0;local v176;local v177;local v178;while true do if (v175==0) then v176=v80[2];v177={v78[v176](v13(v78,v176 + 1 ,v73))};v175=1;end if (v175==1) then v178=0;for v339=v176,v80[4] do v178=v178 + 1 ;v78[v339]=v177[v178];end break;end end end elseif (v81<=57) then if (v78[v80[2]]==v80[4]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81==58) then local v277=v80[2];local v278=v78[v80[3]];v78[v277 + 1 ]=v278;v78[v277]=v278[v80[4]];else v78[v80[2]]=v78[v80[3]];end elseif (v81<=69) then if (v81<=64) then if (v81<=61) then if (v81>60) then v78[v80[2]]();else for v211=v80[2],v80[3] do v78[v211]=nil;end end elseif (v81<=62) then v61[v80[3]]=v78[v80[2]];elseif (v81==63) then local v284=0;local v285;while true do if (v284==0) then v285=v80[2];v78[v285]=v78[v285](v78[v285 + 1 ]);break;end end else v72=v80[3];end elseif (v81<=66) then if (v81==65) then local v181=v80[2];v78[v181]=v78[v181](v13(v78,v181 + 1 ,v80[3]));else for v213=v80[2],v80[3] do v78[v213]=nil;end end elseif (v81<=67) then if v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end elseif (v81>68) then local v288=v80[2];v78[v288]=v78[v288](v13(v78,v288 + 1 ,v73));else v78[v80[2]]=v61[v80[3]];end elseif (v81<=74) then if (v81<=71) then if (v81>70) then if (v78[v80[2]]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end else v78[v80[2]]={};end elseif (v81<=72) then local v184=v80[2];v78[v184](v13(v78,v184 + 1 ,v80[3]));elseif (v81==73) then v78[v80[2]]= #v78[v80[3]];else local v294=v80[2];v78[v294](v13(v78,v294 + 1 ,v73));end elseif (v81<=76) then if (v81>75) then local v185=v80[2];local v186=v78[v80[3]];v78[v185 + 1 ]=v186;v78[v185]=v186[v80[4]];else v78[v80[2]]=v60[v80[3]];end elseif (v81<=77) then local v192=v80[2];local v193={v78[v192](v78[v192 + 1 ])};local v194=0;for v215=v192,v80[4] do v194=v194 + 1 ;v78[v215]=v193[v194];end elseif (v81>78) then v78[v80[2]]=v78[v80[3]]/v78[v80[4]] ;else do return;end end v72=v72 + 1 ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
